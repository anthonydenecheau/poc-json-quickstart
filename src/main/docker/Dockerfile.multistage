## Stage 1 : build with maven builder image with native capabilities
FROM quay.io/quarkus/ubi-quarkus-native-image:19.3.1-java11 as nativebuilder
RUN mkdir -p /tmp/ssl \
  && cp /opt/graalvm/lib/security/cacerts /tmp/ssl/
  
FROM quay.io/quarkus/centos-quarkus-maven:19.3.1-java11 AS build
RUN mkdir -p /tmp/ssl \
  && cp /opt/graalvm/lib/security/cacerts /tmp/ssl/
COPY src/main/script/run.sh /usr/src/app/
COPY ws-openid.json /usr/src/app/
COPY pom.xml /usr/src/app/
RUN mvn -f /usr/src/app/pom.xml -B de.qaware.maven:go-offline-maven-plugin:1.2.5:resolve-dependencies
COPY src /usr/src/app/src
USER root
RUN chown -R quarkus /usr/src/app
USER quarkus
RUN mvn -f /usr/src/app/pom.xml -Pnative clean package -DskipTests=true

## Stage 2 : create the docker final image
FROM registry.access.redhat.com/ubi8/ubi-minimal

# Ano connection socket ! + run.sh 
# pending fix: cf. https://github.com/quarkusio/quarkus/issues/9985
ADD https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 /usr/local/bin/cloud_sql_proxy
RUN chmod 775 /usr/local/bin/cloud_sql_proxy \
  && chown 1001 /usr/local/bin/cloud_sql_proxy \
  && chmod "g+rwX" /usr/local/bin/cloud_sql_proxy \
  && chown 1001:root /usr/local/bin/cloud_sql_proxy

WORKDIR /work/
COPY --from=nativebuilder /tmp/ssl/ /work/
COPY --from=build /usr/src/app/target/*-runner /work/application
COPY --from=build /usr/src/app/ws-openid.json /work/ws-openid.json
COPY --from=build /usr/src/app/run.sh /work/run.sh

# set up permissions for user `1001`
RUN chmod 775 /work /work/application /work/run.sh \
  && chown -R 1001 /work \
  && chmod -R "g+rwX" /work \
  && chown -R 1001:root /work

USER 1001
EXPOSE $PORT
CMD ["./run.sh"]

#EXPOSE 8080
#USER 1001
#ENV DISABLE_SIGNAL_HANDLERS true
#CMD ["./application", "-Dquarkus.http.host=0.0.0.0", "-Djavax.net.ssl.trustStore=/work/cacerts"]
